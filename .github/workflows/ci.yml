
name: Django Deployment Application (CI/CD)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    env:
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      DEBUG: ${{ secrets.DEBUG }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
      GOOGLE_AUTHORIZATION_URL: ${{ secrets.GOOGLE_AUTHORIZATION_URL }}
      GOOGLE_TOKEN_URL: ${{ secrets.GOOGLE_TOKEN_URL }}
      GOOGLE_USERINFO_URL: ${{ secrets.GOOGLE_USERINFO_URL }}
      FROM_DEFAULT_EMAIL: ${{ secrets.FROM_DEFAULT_EMAIL }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      # DB_NAME: ${{secrets.DB_NAME}}
      # DB_USER: ${{secrets.DB_USER}}
      # DB_HOST: ${{secrets.DB_HOST}}
      # DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      # DB_PORT: ${{secrets.DB_PORT}}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Migrations
      run: |
        python manage.py migrate

    - name: Code Formatter
      run: |
        python manage.py codeFormatting django_project/settings.py
        
    - name: Run Linter
      run: |
        pip install flake8
        flake8 .

    - name: Run Code Analysis
      run: |
        git ls-files | grep -v 'migrations' | grep -v 'settings.py' | grep -v 'manage.py' | grep -E '.py$' | xargs pylint -E --load-plugins=pylint_django
        
    - name: Run Tests
      run: |
        python manage.py test --verbosity 2 --failfast

    - name: Run Security Checks
      run: |
        python manage.py check --deploy --fail-level ERROR
