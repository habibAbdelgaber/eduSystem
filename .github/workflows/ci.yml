name: Django Deployment Application (CI/CD)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - 'eduSystem/Dockerfile'

jobs:
  build:
    env:
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      DEBUG: ${{ secrets.DEBUG }}
      USE_SQLITE_FOR_TESTS: ${{secrets.USE_SQLITE_FOR_TESTS}}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
      GOOGLE_AUTHORIZATION_URL: ${{ secrets.GOOGLE_AUTHORIZATION_URL }}
      GOOGLE_TOKEN_URL: ${{ secrets.GOOGLE_TOKEN_URL }}
      GOOGLE_USERINFO_URL: ${{ secrets.GOOGLE_USERINFO_URL }}
      FROM_DEFAULT_EMAIL: ${{ secrets.FROM_DEFAULT_EMAIL }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/test_db
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
         --health-cmd "pg_isready -U postgres"
         --health-interval 10s
         --health-timeout 5s
         --health-retries 5
        ports:
         - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Migrations
        run: |
          python manage.py migrate

      - name: Code Formatter
        run: |
          python manage.py codeFormatting django_project/settings.py

      - name: Run Linter
        run: |
          pip install flake8
          flake8 .

      - name: Run Code Analysis
        run: |
          git ls-files | grep -v 'migrations' | grep -v 'settings.py' | grep -v 'manage.py' | grep -E '.py$' | xargs pylint -E --load-plugins=pylint_django

      - name: Run Tests
        run: |
          python manage.py test --verbosity 2 --failfast

      - name: Run Security Checks
        run: |
          python manage.py check --deploy --fail-level ERROR

      # Docker Build and Push
      - name: Log in to Docker Hub
        uses: docker/login-action@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t devsteams/django-application
          docker push devsteams/django-application

